Pair sum in array

Given a random integer array A and a number x. Find and print the pair of elements in the array which sum to x.
Array A can contain duplicate elements.
While printing a pair, print the smaller element first.
That is, if a valid pair is (6, 5) print "5 6". There is no constraint that out of 5 pairs which have to be printed in 1st line. You can print pairs in any order, just be careful about the order of elements in a pair.
Input format :

Line 1 : Integer N (Array size)
Line 2 : Array elements (separated by space)
Line 3 : Integer x

Output format :

Line 1 : Pair 1 elements (separated by space)
Line 2 : Pair 2 elements (separated by space)
Line 3 : and so on

Constraints :
1 <= N <= 1000
1 <= x <= 100
Sample Input:

9
1 3 6 2 5 4 3 2 4
7

Sample Output :

1 6
3 4
3 4
2 5
2 5
3 4
3 4

____________________________________________________________________________________________________________________

import java.util.*;

public class PairSum{	

	public static void pairSum(int[] arr, int num){
		
      //the below solution works only for distinct pairs
      /*
      	Arrays.sort(arr);
      	int start=0;
      	int end=arr.length-1;
      	while(start<=end){
          if(arr[start]+arr[end]==num){
            System.out.println(arr[start]+" "+arr[end]);
          }
          if(arr[start]+arr[end]<=num){
            start++;
          }else{
            end--;
          }
        }*/
      	//worst solution 
      	//in the question it is mentioned that print elements in the ordered way
      	//that's why we sorted elements
      	Arrays.sort(arr);
      	for(int i=0;i<arr.length;i++){
          for(int j=i+1;j<arr.length;j++){
            if(arr[i]+arr[j]==num){
              System.out.println(arr[i]+" "+arr[j]);
            }
          }
        }
	}
}
