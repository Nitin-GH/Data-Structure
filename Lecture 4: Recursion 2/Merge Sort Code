Merge Sort Code

Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.
Input format :

Line 1 : Integer n i.e. Array size
Line 2 : Array elements (separated by space)

Output format :

Array elements in increasing order (separated by space)

Constraints :
1 <= n <= 1000
Sample Input:

6 
2 6 8 5 4 3

Sample Output:

2 3 4 5 6 8

_______________________________________________________________________________________________________________-

public class solution {

	public static void mergeSort(int[] input){
		merging(input,0,input.length-1);
	}
  	public static void merging(int []input,int start,int end){
      if(start<end){
        int mid=(start+end)/2;
        merging(input,start,mid);
        merging(input,mid+1,end);
        merge(input,start,mid,end);
      }
    }
  	public static void merge(int arr[], int l, int m, int r) 
    { 
        // Find sizes of two subarrays to be merged 
        int n1 = m - l + 1; 
        int n2 = r - m; 
  
        /* Create temp arrays */
        int L[] = new int [n1]; 
        int R[] = new int [n2]; 
  
        /*Copy data to temp arrays*/
        for (int i=0; i<n1; ++i) 
            L[i] = arr[l + i]; 
        for (int j=0; j<n2; ++j) 
            R[j] = arr[m + 1+ j]; 
  
  
        int i = 0, j = 0; 
  
        // Initial index of merged subarry array 
        int k = l; 
        while (i < n1 && j < n2) 
        { 
            if (L[i] <= R[j]) 
            { 
                arr[k] = L[i]; 
                i++; 
            } 
            else
            { 
                arr[k] = R[j]; 
                j++; 
            } 
            k++; 
        }   
        /* Copy remaining elements of L[],R[]
		ex-[1,8,10] [9,15] -->here 15 will be copied as the rest element in the array
			[1,8,22] [9,15] --> here 22 will be copied as it is the only element
	*/
        while (i < n1) 
        { 
            arr[k] = L[i]; 
            i++; 
            k++; 
        } 
        while (j < n2) 
        { 
            arr[k] = R[j]; 
            j++; 
            k++; 
        } 
    } 
}
